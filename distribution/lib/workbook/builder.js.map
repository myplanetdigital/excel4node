{"version":3,"sources":["../../../source/lib/workbook/builder.js"],"names":["xmlbuilder","require","JSZip","fs","CTColor","addRootContentTypesXML","promiseObj","Promise","resolve","reject","xml","create","att","contentTypesAdded","wb","sheets","forEach","s","i","drawingCollection","length","drawings","d","typeRef","contentType","extension","indexOf","ele","push","sheetId","xmlString","doc","end","xmlOutVars","xlsx","file","addRootRelsXML","folder","addWorkBookXML","booksViewEle","sheetsEle","name","definedNameCollection","isEmpty","addToXMLele","addWorkBookRelsXML","addWorkSheetsXML","curSheet","processNextSheet","thisSheet","generateXML","then","generateRelsXML","catch","e","logger","error","stack","addSharedStringsXML","sharedStrings","txt","Array","thisSI","theseRuns","currProps","curRun","undefined","props","text","Object","keys","k","value","run","thisRun","thisRunProps","bold","italics","strike","outline","shadow","condense","extend","color","thisColor","size","underline","vertAlign","addStylesXML","styleData","numFmts","nfXML","nf","fontXML","fonts","f","fillXML","fills","fXML","borderXML","borders","b","cellXfsXML","styles","addXFtoXMLele","dxfCollection","addDrawingsXML","mediaCollection","ws","drawingRelXML","drawingsXML","kind","target","id","readFileSync","imagePath","rId","type","drawingsXMLStr","drawingRelXMLStr","writeToBuffer","WorkSheet","opts","jszip","generateAsync","buf","module","exports"],"mappings":"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","file":"builder.js","sourcesContent":["const xmlbuilder = require('xmlbuilder');\nconst JSZip = require('jszip');\nconst fs = require('fs');\nconst CTColor = require('../style/classes/ctColor.js');\n\nlet addRootContentTypesXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise ((resolve, reject) => {\n        let xml = xmlbuilder.create(\n            'Types',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('xmlns', 'http://schemas.openxmlformats.org/package/2006/content-types');\n\n        let contentTypesAdded = [];\n        promiseObj.wb.sheets.forEach((s, i) => {\n            if (s.drawingCollection.length > 0) { \n                s.drawingCollection.drawings.forEach((d) => {\n                    let typeRef = d.contentType + '.' + d.extension;\n                    if (contentTypesAdded.indexOf(typeRef) < 0) {\n                        xml.ele('Default').att('ContentType', d.contentType).att('Extension', d.extension);\n                        contentTypesAdded.push(typeRef);\n                    }\n                });\n            }\n        });\n        xml.ele('Default').att('ContentType', 'application/xml').att('Extension', 'xml');\n        xml.ele('Default').att('ContentType', 'application/vnd.openxmlformats-package.relationships+xml').att('Extension', 'rels');\n        xml.ele('Override').att('ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml').att('PartName', '/xl/workbook.xml');\n        promiseObj.wb.sheets.forEach((s, i) => {\n            xml.ele('Override')\n            .att('ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml')\n            .att('PartName', `/xl/worksheets/sheet${i + 1}.xml`);\n\n            if (s.drawingCollection.length > 0) {              \n                xml.ele('Override')\n                .att('ContentType', 'application/vnd.openxmlformats-officedocument.drawing+xml')\n                .att('PartName', '/xl/drawings/drawing' + s.sheetId + '.xml');  \n            }\n        });\n        xml.ele('Override').att('ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml').att('PartName', '/xl/styles.xml');\n        xml.ele('Override').att('ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml').att('PartName', '/xl/sharedStrings.xml');\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.file('[Content_Types].xml', xmlString);\n        resolve(promiseObj);\n    });\n};\n\nlet addRootRelsXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise ((resolve, reject) => {\n        let xml = xmlbuilder.create(\n            'Relationships',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('xmlns', 'http://schemas.openxmlformats.org/package/2006/relationships');\n\n        xml\n        .ele('Relationship')\n        .att('Id', 'rId1')\n        .att('Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument')\n        .att('Target', 'xl/workbook.xml');\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('_rels').file('.rels', xmlString);\n        resolve(promiseObj);\n\n    });\n};\n\nlet addWorkBookXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise((resolve, reject) => {\n\n        let xml = xmlbuilder.create(\n            'workbook',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        );\n        xml.att('mc:Ignorable', 'x15');\n        xml.att('xmlns', 'http://schemas.openxmlformats.org/spreadsheetml/2006/main');\n        xml.att('xmlns:mc', 'http://schemas.openxmlformats.org/markup-compatibility/2006');\n        xml.att('xmlns:r', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships');\n        xml.att('xmlns:x15', 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main');\n\n        let booksViewEle = xml.ele('bookViews');\n        booksViewEle.ele('workbookView')\n        .att('xWindow', '240')\n        .att('yWindow', '15')\n        .att('windowWidth', '8505')\n        .att('windowHeight', '6240');\n\n        let sheetsEle = xml.ele('sheets');\n        promiseObj.wb.sheets.forEach((s, i) => {\n            sheetsEle.ele('sheet')\n            .att('name', s.name)\n            .att('sheetId', i + 1)\n            .att('r:id', `rId${i + 1}`);\n        });\n\n        if (!promiseObj.wb.definedNameCollection.isEmpty) {\n            promiseObj.wb.definedNameCollection.addToXMLele(xml);\n        }\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('xl').file('workbook.xml', xmlString);\n        resolve(promiseObj);\n\n    });\n};\n\nlet addWorkBookRelsXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise((resolve, reject) => {\n\n        let xml = xmlbuilder.create(\n            'Relationships',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('xmlns', 'http://schemas.openxmlformats.org/package/2006/relationships');\n\n        xml\n        .ele('Relationship')\n        .att('Id', `rId${promiseObj.wb.sheets.length + 1}`)\n        .att('Target', 'sharedStrings.xml')\n        .att('Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings');\n\n        xml\n        .ele('Relationship')\n        .att('Id', `rId${promiseObj.wb.sheets.length + 2}`)\n        .att('Target', 'styles.xml')\n        .att('Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles');\n\n        promiseObj.wb.sheets.forEach((s, i) => {\n            xml\n            .ele('Relationship')\n            .att('Id', `rId${i + 1}`)\n            .att('Target', `worksheets/sheet${i + 1}.xml`)\n            .att('Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet');\n        });\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('xl').folder('_rels').file('workbook.xml.rels', xmlString);\n        resolve(promiseObj);\n\n    });\n};\n\nlet addWorkSheetsXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise ((resolve, reject) => {\n\n        let curSheet = 0;\n        \n        let processNextSheet = () => {\n            let thisSheet = promiseObj.wb.sheets[curSheet];\n            if (thisSheet) {\n                curSheet++;\n                thisSheet.generateXML()\n                .then((xml) => {\n                    return new Promise((resolve) =>{\n                        // Add worksheet to zip\n                        promiseObj.xlsx.folder('xl').folder('worksheets').file(`sheet${curSheet}.xml`, xml); \n                        \n                        resolve();\n                    });\n                })\n                .then(() => {\n                    return thisSheet.generateRelsXML();\n                })\n                .then((xml) => {\n                    return new Promise((resolve) => {\n                        if (xml) {\n                            promiseObj.xlsx.folder('xl').folder('worksheets').folder('_rels').file(`sheet${curSheet}.xml.rels`, xml);\n                        }\n                        resolve();\n                    });\n                })\n                .then(processNextSheet)\n                .catch((e) => {\n                    promiseObj.wb.logger.error(e.stack);\n                });\n            } else {\n                resolve(promiseObj);\n            }\n        };\n        processNextSheet();\n\n    });\n};\n\n/**\n * Generate XML for SharedStrings.xml file and add it to zip file. Called from _writeToBuffer()\n * @private\n * @memberof WorkBook\n * @param {Object} promiseObj object containing jszip instance, workbook intance and xmlvars\n * @return {Promise} Resolves with promiseObj\n */\nlet addSharedStringsXML = (promiseObj) => {\n    // §12.3.15 Shared String Table Part\n    return new Promise ((resolve, reject) => {\n\n        let xml = xmlbuilder.create(\n            'sst',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('count', promiseObj.wb.sharedStrings.length)\n        .att('uniqueCount', promiseObj.wb.sharedStrings.length)\n        .att('xmlns', 'http://schemas.openxmlformats.org/spreadsheetml/2006/main');\n\n        promiseObj.wb.sharedStrings.forEach((s) => {\n            if (typeof s === 'string') {\n                xml.ele('si').ele('t').txt(s);\n            } else if (s instanceof Array) {\n\n                let thisSI = xml.ele('si');\n                let theseRuns = []; // §18.4.4 r (Rich Text Run)\n                let currProps = {};\n                let curRun;\n                let i = 0;\n                while (i < s.length) {\n                    if (typeof s[i] === 'string') {\n                        if (curRun === undefined) {\n                            theseRuns.push({\n                                props: {},\n                                text: ''\n                            });\n                            curRun = theseRuns[theseRuns.length - 1];\n                        } \n                        curRun.text = curRun.text + s[i];\n                    } else if (typeof s[i] === 'object') {\n                        theseRuns.push({\n                            props: {},\n                            text: ''\n                        });\n                        curRun = theseRuns[theseRuns.length - 1];\n                        Object.keys(s[i]).forEach((k) => {\n                            currProps[k] = s[i][k];\n                        });\n                        Object.keys(currProps).forEach((k) => {\n                            curRun.props[k] = currProps[k];\n                        });\n                        if (s[i].value !== undefined) {\n                            curRun.text = s[i].value;\n                        }\n                    }\n                    i++;\n                }\n\n                theseRuns.forEach((run) => {\n                    if (Object.keys(run).length < 1) {\n                        thisSI.ele('t', run.text).att('xml:space', 'preserve');\n                    } else {\n                        let thisRun = thisSI.ele('r');\n                        let thisRunProps = thisRun.ele('rPr');\n                        typeof run.props.name === 'string' ? thisRunProps.ele('rFont').att('val', run.props.name) : null;\n                        run.props.bold === true ? thisRunProps.ele('b') : null;\n                        run.props.italics === true ? thisRunProps.ele('i') : null;\n                        run.props.strike === true ? thisRunProps.ele('strike') : null;\n                        run.props.outline === true ? thisRunProps.ele('outline') : null;\n                        run.props.shadow === true ? thisRunProps.ele('shadow') : null;\n                        run.props.condense === true ? thisRunProps.ele('condense') : null;\n                        run.props.extend === true ? thisRunProps.ele('extend') : null;\n                        if (typeof run.props.color === 'string') {\n                            let thisColor = new CTColor(run.props.color);\n                            thisColor.addToXMLele(thisRunProps);\n                        }\n                        typeof run.props.size === 'number' ? thisRunProps.ele('sz').att('val', run.props.size) : null;\n                        run.props.underline === true ? thisRunProps.ele('u') : null;\n                        typeof run.props.vertAlign === 'string' ? thisRunProps.ele('vertAlign').att('val', run.props.vertAlign) : null;\n                        thisRun.ele('t', run.text).att('xml:space', 'preserve');\n                    }\n                });\n\n            }\n        });\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('xl').file('sharedStrings.xml', xmlString);\n\n        resolve(promiseObj);\n\n    });\n};\n\nlet addStylesXML = (promiseObj) => {\n    // §12.3.20 Styles Part\n    return new Promise ((resolve, reject) => {\n\n        let xml = xmlbuilder.create(\n            'styleSheet',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('mc:Ignorable', 'x14ac')\n        .att('xmlns', 'http://schemas.openxmlformats.org/spreadsheetml/2006/main')\n        .att('xmlns:mc', 'http://schemas.openxmlformats.org/markup-compatibility/2006')\n        .att('xmlns:x14ac', 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac');\n\n        if (promiseObj.wb.styleData.numFmts.length > 0) {\n            let nfXML = xml\n            .ele('numFmts')\n            .att('count', promiseObj.wb.styleData.numFmts.length);\n            promiseObj.wb.styleData.numFmts.forEach((nf) => {\n                nf.addToXMLele(nfXML);\n            });\n        }\n\n        let fontXML = xml\n        .ele('fonts')\n        .att('count', promiseObj.wb.styleData.fonts.length);\n        promiseObj.wb.styleData.fonts.forEach((f) => {\n            f.addToXMLele(fontXML);\n        });\n\n        let fillXML = xml \n        .ele('fills')\n        .att('count', promiseObj.wb.styleData.fills.length);\n        promiseObj.wb.styleData.fills.forEach((f) => {\n            let fXML = fillXML.ele('fill');\n            f.addToXMLele(fXML);\n        });\n\n        let borderXML = xml \n        .ele('borders')\n        .att('count', promiseObj.wb.styleData.borders.length);\n        promiseObj.wb.styleData.borders.forEach((b) => {\n            b.addToXMLele(borderXML);\n        });\n\n\n        let cellXfsXML = xml \n        .ele('cellXfs')\n        .att('count', promiseObj.wb.styles.length);\n        promiseObj.wb.styles.forEach((s) => {\n            s.addXFtoXMLele(cellXfsXML);\n        });\n\n        if (promiseObj.wb.dxfCollection.length > 0) {\n            promiseObj.wb.dxfCollection.addToXMLele(xml);\n        }\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('xl').file('styles.xml', xmlString);\n\n        resolve(promiseObj);\n    });\n};\n\nlet addDrawingsXML = (promiseObj) => {\n    return new Promise((resolve) => {\n        if (!promiseObj.wb.mediaCollection.isEmpty) {\n\n            promiseObj.wb.sheets.forEach((ws) => {\n                if (!ws.drawingCollection.isEmpty) {\n\n                    let drawingRelXML = xmlbuilder.create('Relationships', \n                        {\n                            'version': '1.0', \n                            'encoding': 'UTF-8', \n                            'standalone': true\n                        }\n                    )\n                    .att('xmlns', 'http://schemas.openxmlformats.org/package/2006/relationships');\n\n                    let drawingsXML = xmlbuilder.create(\n                        'xdr:wsDr',\n                        {\n                            'version': '1.0', \n                            'encoding': 'UTF-8', \n                            'standalone': true\n                        }\n                    );\n                    drawingsXML\n                    .att('xmlns:a', 'http://schemas.openxmlformats.org/drawingml/2006/main')\n                    .att('xmlns:xdr', 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing');\n\n                    ws.drawingCollection.drawings.forEach((d) => {\n\n                        if (d.kind === 'image') {\n                            let target = 'image' + d.id + '.' + d.extension;\n                            promiseObj.xlsx.folder('xl').folder('media').file(target, fs.readFileSync(d.imagePath));\n\n                            drawingRelXML.ele('Relationship')\n                            .att('Id', d.rId)\n                            .att('Target', '../media/' + target)\n                            .att('Type', d.type);\n\n                        }\n\n\n\n                        d.addToXMLele(drawingsXML);\n                        \n                    });\n\n                    let drawingsXMLStr = drawingsXML.doc().end(promiseObj.xmlOutVars);\n                    let drawingRelXMLStr = drawingRelXML.doc().end(promiseObj.xmlOutVars);\n                    promiseObj.xlsx.folder('xl').folder('drawings').file('drawing' + ws.sheetId + '.xml', drawingsXMLStr);\n                    promiseObj.xlsx.folder('xl').folder('drawings').folder('_rels').file('drawing' + ws.sheetId + '.xml.rels', drawingRelXMLStr);\n                }\n            });\n\n        }\n        resolve(promiseObj);\n    });\n};\n\n/**\n * Use JSZip to generate file to a node buffer\n * @private\n * @memberof WorkBook\n * @param {WorkBook} wb WorkBook instance\n * @return {Promise} resolves with Buffer \n */\nlet writeToBuffer = (wb) => {\n    return new Promise ((resolve, reject) => {\n        let promiseObj = {\n            wb: wb, \n            xlsx: new JSZip(),\n            xmlOutVars: {}\n        };\n\n        if (promiseObj.wb.sheets.length === 0) {\n            promiseObj.wb.WorkSheet();\n        }\n\n        addRootContentTypesXML(promiseObj)\n        .then(addWorkSheetsXML)\n        .then(addRootRelsXML)\n        .then(addWorkBookXML)\n        .then(addWorkBookRelsXML)\n        .then(addSharedStringsXML)\n        .then(addStylesXML)\n        .then(addDrawingsXML)\n        .then(() => {\n            wb.opts.jszip.type = 'nodebuffer';\n            promiseObj.xlsx.generateAsync(wb.opts.jszip)\n            .then((buf) => {\n                resolve(buf);\n            })\n            .catch((e) => {\n                reject(e);\n            });\n        })\n        .catch((e) => {\n            wb.logger.error(e.stack);\n            reject(e);\n        });\n\n    });\n};\n\nmodule.exports = { writeToBuffer };"]}